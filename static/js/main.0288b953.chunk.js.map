{"version":3,"sources":["Components/Header.js","Components/Modal.js","Components/Task.js","Components/Tasks.js","Components/Timer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Modal","data","submitHandler","updateTaskMessage","useState","taskMessage","setTaskMessage","closeModal","document","querySelector","style","visibility","task","id","uuid","message","useEffect","onClick","onSubmit","e","type","placeholder","value","onChange","target","Task","editTaskIdHandler","removeTaskHandler","check__btn","classList","toggle","Tasks","totalTasks","setTotalTasks","singleTask","setSingleTask","openModal","info","filteredTask","filter","getAllTasksFromLocalStorage","window","localStorage","getItem","JSON","parse","setItem","stringify","length","map","preventDefault","push","setTasksInLocalStorage","Timer","Completionist","start","setStart","clockRef","useRef","date","Date","now","renderer","minutes","seconds","completed","autoStart","ref","current","pause","stop","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0288b953.chunk.js","sourcesContent":["import React from 'react'\r\nimport {AiOutlineClockCircle} from 'react-icons/ai'\r\nconst Header = () => {\r\n  return (\r\n    <div className='app__header'>\r\n      <AiOutlineClockCircle className='clock__icon' />\r\n      <h2>Pomodoro Timer</h2>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React, {useEffect, useState} from 'react'\r\nimport {AiFillCloseCircle} from 'react-icons/ai'\r\nimport {v4 as uuid} from 'uuid'\r\n\r\nconst Modal = ({data, submitHandler, updateTaskMessage}) => {\r\n  const [taskMessage, setTaskMessage] = useState('')\r\n\r\n  const closeModal = () => {\r\n    document.querySelector('.modal').style.visibility = 'hidden'\r\n    setTaskMessage('')\r\n  }\r\n  const task = {\r\n    id: data?.id ? data?.id : uuid(),\r\n    message: taskMessage,\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      task.id = data?.id\r\n      setTaskMessage(data?.message)\r\n    }\r\n  }, [data])\r\n\r\n  return (\r\n    <div className='modal'>\r\n      <div className='modal__container'>\r\n        <div className='modal__container__header'>\r\n          <AiFillCloseCircle className='close__icon' onClick={closeModal} />\r\n        </div>\r\n        <div className='modal__container__content'>\r\n          <form\r\n            className='form'\r\n            id='form'\r\n            onSubmit={\r\n              data?.id\r\n                ? (e) => updateTaskMessage(e, task) & setTaskMessage('')\r\n                : (e) => submitHandler(e, task) & setTaskMessage('')\r\n            }\r\n          >\r\n            <div className='input_wrapper'>\r\n              <input\r\n                type='text'\r\n                placeholder='What are you working on?'\r\n                value={taskMessage}\r\n                onChange={(e) => setTaskMessage(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className='buttons__container'>\r\n              <p className='btn__one' onClick={closeModal}>\r\n                Cancel\r\n              </p>\r\n              <button type='submit'>{data?.id ? 'Update' : 'Save'}</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","import React from 'react'\r\nimport {FaCheckCircle} from 'react-icons/fa'\r\nimport {RiPencilFill} from 'react-icons/ri'\r\nimport {VscTrash} from 'react-icons/vsc'\r\n\r\nconst Task = ({task, editTaskIdHandler, removeTaskHandler}) => {\r\n  const markAsCompleted = () => {\r\n    const check__btn = document.querySelector('.check__icon')\r\n    const taskMessage = document.querySelector('.text')\r\n    check__btn?.classList.toggle('checkVisible')\r\n    taskMessage?.classList.toggle('textVisible')\r\n  }\r\n  return (\r\n    <div className='single__task'>\r\n      <div className='single__task__left'>\r\n        <FaCheckCircle className='check__icon' onClick={markAsCompleted} />\r\n        <p className='text'>{task?.message}</p>\r\n      </div>\r\n      <div className='single__task__right'>\r\n        <RiPencilFill\r\n          className='edit__icon'\r\n          onClick={() => editTaskIdHandler(task?.id)}\r\n        />\r\n        <VscTrash\r\n          className='delete__icon'\r\n          onClick={() => removeTaskHandler(task?.id)}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Task\r\n","import React, {useEffect, useState} from 'react'\r\nimport {BiPlus} from 'react-icons/bi'\r\nimport {FaPlusCircle} from 'react-icons/fa'\r\nimport Modal from './Modal'\r\nimport Task from './Task'\r\n\r\nconst Tasks = () => {\r\n  const [totalTasks, setTotalTasks] = useState([])\r\n  const [singleTask, setSingleTask] = useState('')\r\n\r\n  const openModal = (info) => {\r\n    document.querySelector('.modal').style.visibility = 'visible'\r\n    if (info === true) {\r\n      setSingleTask('')\r\n    }\r\n  }\r\n\r\n  const closeModal = () => {\r\n    document.querySelector('.modal').style.visibility = 'hidden'\r\n  }\r\n\r\n  //   Helpers\r\n  const editTaskIdHandler = (id) => {\r\n    openModal()\r\n    const filteredTask = totalTasks?.filter((task) => task.id === id)\r\n    setSingleTask(filteredTask)\r\n  }\r\n  const getAllTasksFromLocalStorage = () => {\r\n    if (window?.localStorage?.getItem('TaskMessages')) {\r\n      setTotalTasks(JSON.parse(window?.localStorage?.getItem('TaskMessages')))\r\n    }\r\n  }\r\n\r\n  const setTasksInLocalStorage = (info) => {\r\n    if (info && typeof localStorage !== 'undefined') {\r\n      totalTasks.push(info)\r\n      window?.localStorage?.setItem('TaskMessages', JSON.stringify(totalTasks))\r\n      closeModal()\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllTasksFromLocalStorage()\r\n  }, [])\r\n\r\n  // CRUD operations\r\n  const submitHandler = (e, data) => {\r\n    e.preventDefault()\r\n    setTasksInLocalStorage(data)\r\n    getAllTasksFromLocalStorage()\r\n  }\r\n  const updateTaskMessage = (e, data) => {\r\n    e.preventDefault()\r\n    const filteredTask = totalTasks?.filter((task) => task.id !== data?.id)\r\n    filteredTask.push(data)\r\n    window?.localStorage?.setItem('TaskMessages', JSON.stringify(filteredTask))\r\n    getAllTasksFromLocalStorage()\r\n    closeModal()\r\n    setSingleTask('')\r\n  }\r\n  const removeTaskHandler = (id) => {\r\n    const filteredTask = totalTasks?.filter((task) => task.id !== id)\r\n    window?.localStorage?.setItem('TaskMessages', JSON.stringify(filteredTask))\r\n    closeModal()\r\n    getAllTasksFromLocalStorage()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='tasks'>\r\n        <div className='tasks__header'>\r\n          <h4>\r\n            Tasks <span>{totalTasks?.length}</span>\r\n          </h4>\r\n          <div className='icon__wrapper' onClick={() => openModal(true)}>\r\n            <BiPlus />\r\n          </div>\r\n        </div>\r\n        <div className='tasks__container'>\r\n          {totalTasks?.map((task) => (\r\n            <Task\r\n              editTaskIdHandler={editTaskIdHandler}\r\n              removeTaskHandler={removeTaskHandler}\r\n              key={task.id}\r\n              task={task}\r\n            />\r\n          ))}\r\n        </div>\r\n        <div className='add__task' onClick={() => openModal(true)}>\r\n          <FaPlusCircle />\r\n          <h4>Add Task</h4>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        updateTaskMessage={updateTaskMessage}\r\n        submitHandler={submitHandler}\r\n        data={singleTask?.[0]}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tasks\r\n","import React, {useRef, useState} from 'react'\r\nimport Countdown from 'react-countdown'\r\n\r\nconst Timer = () => {\r\n  const Completionist = () => <span>You are good to go!</span>\r\n\r\n  // Renderer callback with condition\r\n  const renderer = ({minutes, seconds, completed}) => {\r\n    if (completed) {\r\n      // Render a completed state\r\n      return <Completionist />\r\n    } else {\r\n      // Render a countdown\r\n      return (\r\n        <span>\r\n          {minutes}:{seconds}\r\n        </span>\r\n      )\r\n    }\r\n  }\r\n  const [start, setStart] = useState(false)\r\n\r\n  const clockRef = useRef()\r\n  const handleStart = () => clockRef.current.start()\r\n  const handlePause = () => clockRef.current.pause()\r\n  const handleStop = () => clockRef.current.stop()\r\n\r\n  return (\r\n    <div className='timer'>\r\n      <div className='timer__container'>\r\n        <Countdown\r\n          date={Date.now() + 1500000}\r\n          renderer={renderer}\r\n          autoStart={false}\r\n          ref={clockRef}\r\n        />\r\n\r\n        <div className='timer__container__buttons'>\r\n          <button\r\n            onClick={\r\n              !start\r\n                ? () => handleStart() & setStart(true)\r\n                : () => handlePause() & setStart(true)\r\n            }\r\n          >\r\n            {start ? 'Pause' : 'Start'}\r\n          </button>\r\n\r\n          {start && (\r\n            <button onClick={() => handleStop() & setStart(false)}>\r\n              {start ? 'Stop' : null}\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Timer\r\n","import Header from './Components/Header'\nimport Tasks from './Components/Tasks'\nimport Timer from './Components/Timer'\n\nfunction App() {\n  return (\n    <div className='app'>\n      <div className='app__container'>\n        <Header />\n        <Timer />\n        <Tasks />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}